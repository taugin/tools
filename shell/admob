#!/usr/bin/env bash

# AdMob Live Stats 脚本（增加广告格式）
# 实时抓取 logcat 日志，统计 Publisher / Slot / Type 请求和展示次数

# 统计数组
declare -A req_count
declare -A disp_count

# 保存广告格式
declare -A ad_type

last_key="|"
declare -A package_name

print_header() {
    # 取 last_key 对应的 Publisher
    echo "AdMob Live Stats (Real-time):"
    printf "%-30s %-15s %-15s %-10s %-10s %-15s %-10s\n" "Publisher" "Slot" "Type" "ReqCount" "DisplayCount" "Time" "PackageName"
    echo "------------------------------------------------------------------------------------------------------------------"
}

# 打印表头函数
print_table() {
    clear
    print_header
    last_pub="${last_key%%|*}"

    # 用关联数组收集 Publisher 分组
    declare -A pub_groups
    for key in "${!req_count[@]}"; do
        pub="${key%%|*}"
        pub_groups["$pub"]=1
    done
    echo "$pub_groups"
    # 遍历 Publisher 分组，非 last_pub 先输出
    for pub in "${!pub_groups[@]}"; do
        if [ "$pub" != "$last_pub" ]; then
            for key in "${!req_count[@]}"; do
                if [[ "$key" == "$pub|"* ]]; then
                    slot="${key#*|}"
                    type=${ad_type[$key]:-"N/A"}
                    timestring=$(date +"%H:%M:%S.%3N")
                    printf "%-25s %-15s %-20s %-10s %-10s %-15s %-10s\n" "$pub" "$slot" "$type" "${req_count[$key]}" "${disp_count[$key]:-0}" "${timestring}" "${package_name[$pub]}"
                fi
            done
        fi
    done

    # 最后输出 last_pub 组
    for key in "${!req_count[@]}"; do
        if [[ "$key" == "$last_pub|"* ]]; then
            slot="${key#*|}"
            type=${ad_type[$key]:-"N/A"}
            timestring=$(date +"%H:%M:%S.%3N")
            printf "%-25s %-15s %-20s %-10s %-10s %-15s %-10s\n" "$last_pub" "$slot" "$type" "${req_count[$key]}" "${disp_count[$key]:-0}" "${timestring}" "${package_name[$last_pub]}"
        fi
    done
}

clear
print_header
#adb logcat -c
# 监听 logcat
adb logcat -s Ads | while read -r line; do
    # 匹配 URL 形式，提取广告格式
    if [[ $line =~ .*format=([a-zA-Z0-9_]+).*msid=([^& ]+).*client=ca-app-pub-([0-9]+).*slotname=([0-9]+) ]]; then
        type="${BASH_REMATCH[1]}"
		pkgname="${BASH_REMATCH[2]}"
        publisher="ca-app-pub-${BASH_REMATCH[3]}"
        slot="${BASH_REMATCH[4]}"
        key="$publisher|$slot"
        ad_type[$key]=$type
		package_name[$publisher]=$pkgname
        ((req_count[$key]++))
		last_key="$key"
        print_table
    # 匹配文本行形式 Publisher / Slot / Type
    elif [[ $line =~ Publisher:\ ([a-zA-Z0-9-]+),\ Slot:\ ([a-zA-Z0-9-]+),\ Type:\ ([a-zA-Z0-9_]+) ]]; then
        publisher="${BASH_REMATCH[1]}"
        slot="${BASH_REMATCH[2]}"
        type="${BASH_REMATCH[3]}"
        [[ -z "$slot" ]] && slot="N/A"
        key="$publisher|$slot"
        ad_type[$key]=$type
        ((disp_count[$key]++))
		last_key="$key"
        print_table
    fi
done
