#!/usr/bin/env bash

# AdMob Live Stats 脚本（增加广告格式）
# 实时抓取 logcat 日志，统计 Publisher / Slot / Type 请求和展示次数

# 统计数组
declare -A req_count
declare -A disp_count
declare -A act_count

# 保存广告格式
declare -A ad_type

last_key="|"
declare -A package_name
declare -A timestamps

print_header() {
    # 取 last_key 对应的 Publisher
    echo "AdMob Live Stats (Real-time):"
    printf "%-30s %-15s %-15s %-10s %-10s %-15s %-10s\n" "Publisher" "Slot" "Type" "ReqCount" "DisplayCount" "Time" "PackageName"
    echo -n "------------------------------------------------------------------------------------------------------------------"
}

# 打印表头函数
print_table() {
    clear
    print_header
    last_pub="${last_key%%|*}"

    # 用关联数组收集 Publisher 分组
    declare -A pub_groups
    for key in "${!req_count[@]}"; do
        pub="${key%%|*}"
        pub_groups["$pub"]=1
    done
    echo "$pub_groups"
    # 遍历 Publisher 分组，非 last_pub 先输出
    for pub in "${!pub_groups[@]}"; do
        if [ "$pub" != "$last_pub" ]; then
            for key in "${!req_count[@]}"; do
                if [[ "$key" == "$pub|"* ]]; then
                    slot="${key#*|}"
                    type=${ad_type[$key]:-"N/A"}
                    display_count=${disp_count[$key]:-0}
                    pkgname=${package_name[$pub]}
                    if [ "$type" == "interstitial_mb" ];then
                        display_count=${act_count[$pkgname]:-0}
                    else
                        display_count=${disp_count[$key]:-0}
                    fi
                    printf "%-25s %-15s %-20s %-10s %-10s %-15s %-10s\n" "$pub" "$slot" "$type" "${req_count[$key]}" "$display_count" "${timestamps[$key]}" "$pkgname"
                fi
            done
        fi
    done

    # 最后输出 last_pub 组
    pub=$last_pub
    for key in "${!req_count[@]}"; do
        if [[ "$key" == "$pub|"* ]]; then
            slot="${key#*|}"
            type=${ad_type[$key]:-"N/A"}
            display_count=${disp_count[$key]:-0}
            pkgname=${package_name[$pub]}
            if [ "$type" == "interstitial_mb" ];then
                display_count=${act_count[$pkgname]:-0}
            else
                display_count=${disp_count[$key]:-0}
            fi
            printf "%-25s %-15s %-20s %-10s %-10s %-15s %-10s\n" "$pub" "$slot" "$type" "${req_count[$key]}" "$display_count" "${timestamps[$key]}" "$pkgname"
        fi
    done
}

clear
print_header
adb logcat -c
# 监听 logcat
adb logcat -s ActivityTaskManager Ads | while read -r line; do
    # 匹配 URL 形式，提取广告格式
    if [[ $line =~ .*format=([a-zA-Z0-9_]+).*msid=([^& ]+).*client=ca-app-pub-([0-9]+).*slotname=([0-9]+) ]]; then
        type="${BASH_REMATCH[1]}"
        pkgname="${BASH_REMATCH[2]}"
        publisher="ca-app-pub-${BASH_REMATCH[3]}"
        slot="${BASH_REMATCH[4]}"
        key="$publisher|$slot"
        ad_type[$key]=$type
        package_name[$publisher]=$pkgname
        timestamps[$key]=$(date +"%H:%M:%S.%3N")
        ((req_count[$key]++))
        last_key="$key"
        print_table
    # 匹配文本行形式 Publisher / Slot / Type
    elif [[ $line =~ Publisher:\ ([a-zA-Z0-9-]+),\ Slot:\ ([a-zA-Z0-9-]+),\ Type:\ ([a-zA-Z0-9_]+) ]]; then
        publisher="${BASH_REMATCH[1]}"
        slot="${BASH_REMATCH[2]}"
        type="${BASH_REMATCH[3]}"
        [[ -z "$slot" ]] && slot="N/A"
        key="$publisher|$slot"
        ad_type[$key]=$type
        timestamps[$key]=$(date +"%H:%M:%S.%3N")
        ((disp_count[$key]++))
        last_key="$key"
        print_table
    elif [[ $line =~ Displayed[[:space:]]+([a-zA-Z0-9._/-]+) ]]; then
        pkg_class="${BASH_REMATCH[1]}"
        # 分割包名和类名
        pkg="${pkg_class%/*}"   # %/* 删除最后一个 / 及之后内容
        cls="${pkg_class#*/}"   # #*/ 删除最前面的 / 及之前内容
        # echo "Package: $pkg"
        # echo "Class: $cls"
        if [ "$cls" == "com.google.android.gms.ads.AdActivity" ];then
            ((act_count[$pkg]++))
        fi
        print_table
    fi
done
