#!/bin/bash
USE_TESTSIGN_FILE="false"
CREATE_TMP_APK="false"
SRC_APK_FILE=""
KEYSTORE_FILE=""
KEYSTORE_ALIAS=""
KEYSTORE_PASS=""
KEYALIAS_PASS=""

ZIP=$(which zip)
UNZIP=$(which unzip)
KEYTOOL=$(which keytool)
JARSIGNER=$(which jarsigner)

#echo "JARSIGNER = $JARSIGNER"
#JDK7ARG="-tsa https://timestamp.geotrust.com/tsa -digestalg SHA1 -sigalg MD5withRSA"


if [[ -z "$ZIP" || -z "$UNZIP" || -z "$JARSIGNER" || -z "$KEYTOOL" ]];then
    echo "Can not find zip/unzip/jarsigner"
    exit
fi

SIGN_TOOL_DIR=$(dirname "$0")

function showmsg_fun() {
    echo -e "\033[31m$1\033[0m" $2 $3 $4
}

function repack_fun() {
    showmsg_fun "[Packing...]" "$1 -> $2"
    $UNZIP -q $1 $REPLACE_FILE
    $ZIP -d "$2" $REPLACE_FILE
    $ZIP  -q $2 -m $REPLACE_FILE
    rm -rf $REPLACE_FILE assets lib
}

function readkeystore() {
	ALLFILE=($(ls *.keystore 2>/dev/null))
	arraylen=${#ALLFILE[@]};
	if [ $arraylen -eq 0 ];then
		showmsg_fun "[Error...] Can not find keystore file !!!!!"
		exit;
	fi
	selectindex=0;
	inputvalue="";
	index=0;
	if [ $arraylen -gt 1 ];then
		showmsg_fun "Please select keystore file : "
		while [ $index -lt $arraylen ];
		do
			echo -e "\t[$index] : ${ALLFILE[$index]}"
			index=$(($index+1))
		done
		read -t 5 -p "Input keystore number : " inputvalue
		if [ -z "$inputvalue" ];then
			echo
		fi
	fi

	if [[ $inputvalue -ge 0 && $inputvalue -lt $arraylen ]];then
	selectindex=$inputvalue
	else
	selectindex=0
	fi

	KEYSTORE_FILE=${ALLFILE[$selectindex]};
	#echo "$KEYSTORE_FILE"
	keystorefile=${KEYSTORE_FILE%.keystore}
	#echo $keystorefile
	KEYSTORE_ALIAS=$(echo "$keystorefile" | awk -F '_' '{print $1}')
	KEYSTORE_PASS=$(echo "$keystorefile" | awk -F '_' '{print $3}')
	KEYALIAS_PASS=$(echo "$keystorefile" | awk -F '_' '{print $4}')
	#echo "KEYSTORE_ALIAS : $KEYSTORE_ALIAS"
	#echo "KEYSTORE_PASS  : $KEYSTORE_PASS"
	#echo "KEYALIAS_PASS  : $KEYALIAS_PASS"
	if [ -z "$KEYALIAS_PASS" ];then
		KEYALIAS_PASS=$KEYSTORE_PASS
	fi
	if [[ -z "$KEYSTORE_ALIAS" || -z "$KEYSTORE_PASS" ]];then
		showmsg_fun "[Error...]" "keypass or keyalias is empty, keyalias : $KEYSTORE_ALIAS, keypass : $KEYSTORE_PASS"
		exit;
	fi
	$KEYTOOL -list -keystore "$PWD/$KEYSTORE_FILE" -storepass "$KEYSTORE_PASS" 2>/dev/null 1>/dev/null
	if [ "$?" != "0" ];then
		showmsg_fun "[Error...] keypass \"$KEYSTORE_PASS\" is not correct for $KEYSTORE_FILE"
		exit;
	fi
}

function deletemetainf() {
    # delete META-INF
    showmsg_fun "[Logging...]" "Delete META-INF..."
    $ZIP -dq "$1" META-INF/\* 2>/dev/null 1>/dev/null
}

function signapk_fun() {
    #showmsg_fun "[Logging...]" "USE_TESTSIGN_FILE = $USE_TESTSIGN_FILE"
    if [ "$USE_TESTSIGN_FILE" == "true" ];then
        showmsg_fun "[Logging...]" "Sign the apk using test key"
        deletemetainf "$1"
        showmsg_fun "[Signing...]" "$1 -> $2"
        java -jar $SIGN_TOOL_DIR/signapk.jar $SIGN_TOOL_DIR/testkey.x509.pem $SIGN_TOOL_DIR/testkey.pk8 "$1" "$2"
    else
        showmsg_fun "[Logging...]" "Sign the apk using keystore : [$KEYSTORE_FILE], storepass : [$KEYSTORE_PASS] , keyalias : [$KEYSTORE_ALIAS], keypass : [$KEYSTORE_PASS]"
        deletemetainf "$1"
        showmsg_fun "[Signing...]" "$1 -> $2"
        $JARSIGNER $JDK7ARG -keystore "$PWD/$KEYSTORE_FILE" -storepass "$KEYSTORE_PASS" -keypass "$KEYALIAS_PASS" -signedjar "$2" "$1" "$KEYSTORE_ALIAS"
    fi
}

function exec_sign_process() {
    if [ ! -f "$1" ];then
        showmsg_fun "[Error...]" "$1 is not found"
        exit
    fi
    #renamedFile=$(echo "$1" | sed s/-signed.apk/.apk/g)
    basename=$(echo "$1" | sed s/.apk//g)
    #echo "basename = $basename"

    # Start sign apk
    signedapk="$basename-signed.apk"
    tmpapk="$basename-tmp.apk";
    srcapk="$1"
    if [ "$USE_TESTSIGN_FILE" == "false" ];then
        readkeystore
    fi
    if [ "$CREATE_TMP_APK" == "true" ];then
        showmsg_fun "[Logging...]" "Create tmp apk..."
    	cp -f "$srcapk" $tmpapk
    	srcapk=$tmpapk
    fi
    signapk_fun "$srcapk" $signedapk
    if [ "$CREATE_TMP_APK" == "true" ];then
        showmsg_fun "[Logging...]" "Delete tmp apk..."
	    rm -rf $tmpapk
    fi    
}

function usage() {
	tmp=$(basename $0)
	showmsg_fun "[Usage : ] $tmp -t srcapk";
	showmsg_fun "[Usage : ] $tmp srcapk (put *.keystore in $PWD such as home_pwd_123456.keystore)";
}

function main() {
    TEMP=$(getopt t -- "$@" 2>/dev/null)

    [ $? != 0 ] && echo -e "\033[31mERROR: unknown argument! \033[0m\n" && exit 1

    eval set "$TEMP"
	SRC_APK_FILE="$1"
    while :
    do
        [ -z "$1" ] && break;

        case "$1" in
            -t)
	            SRC_APK_FILE="$2"
                USE_TESTSIGN_FILE="true"
                shift
                ;;
            --)
                shift;
                ;;
             *)
                #echo -e "\033[31mERROR: unknown argument! \033[0m\n" && exit 1
                #echo "$*"
                break;
                ;;
        esac
    done

    if [ "$SRC_APK_FILE" == "" ] ;then
    	usage
    	exit;
    fi
    exec_sign_process "$SRC_APK_FILE"
}
main $*
